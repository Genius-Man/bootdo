package ${package}.controller;

import java.util.List;
import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import com.bootdo.common.controller.BaseController;
import ${package}.domain.${className};
import ${package}.service.${className}Service;
import com.bootdo.common.utils.PageUtils;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.bootdo.common.utils.Query;
import com.bootdo.common.utils.R;

/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
 
@Controller
@RequestMapping("/${pathName}/${classname}")
public class ${className}Controller extends BaseController<${className}, ${className}Service> {
    
    private final String prefix="${pathName}/${classname}"  ;
    
	@Autowired
	private ${className}Service ${classname}Service;
	
	@GetMapping()
	@RequiresPermissions("${pathName}:${classname}:${classname}")
	String ${className}(){
	    return prefix+"/${classname}";
	}
	
	@ResponseBody
	@RequestMapping("/list")
	@RequiresPermissions("${pathName}:${classname}:${classname}")
	public PageUtils list(@RequestParam Map<String, Object> params){
		//查询列表数据
		EntityWrapper<${className}>  wrapper = new EntityWrapper<${className}>(new ${className}());
		Query<${className}> query = new Query<${className}>(params,wrapper);
		List<${className}> ${classname}List = ${classname}Service.selectList(wrapper);
		PageUtils pageUtils = new PageUtils(${classname}List, query.getPage().getTotal());
		return pageUtils;
	}
	
	@GetMapping("/add")
	@RequiresPermissions("${pathName}:${classname}:add")
	String add(){
	    return prefix+"/add";
	}

	@GetMapping("/edit/{${pk.attrname}}")
	@RequiresPermissions("${pathName}:${classname}:edit")
	String edit(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname},Model model){
		${className} ${classname} = ${classname}Service.selectById(${pk.attrname});
		model.addAttribute("${classname}", ${classname});
	    return prefix+"/edit";
	}
	
	/**
	 * 保存
	 */
	@ResponseBody
	@PostMapping("/save")
	@RequiresPermissions("${pathName}:${classname}:add")
	public R save( ${className} ${classname}){
		if(${classname}Service.save(${classname})>0){
			return R.ok();
		}
		return R.error();
	}
	/**
	 * 修改
	 */
	@ResponseBody
	@RequestMapping("/update")
	@RequiresPermissions("${pathName}:${classname}:edit")
	public R update( ${className} ${classname}){
		${classname}Service.update(${classname});
		return R.ok();
	}
	
	/**
	 * 删除
	 */
	@PostMapping( "/remove")
	@ResponseBody
	@RequiresPermissions("${pathName}:${classname}:remove")
	public R remove( ${pk.attrType} ${pk.attrname}){
		if(${classname}Service.remove(${pk.attrname})>0){
		return R.ok();
		}
		return R.error();
	}
	
	/**
	 * 删除
	 */
	@PostMapping( "/batchRemove")
	@ResponseBody
	@RequiresPermissions("${pathName}:${classname}:batchRemove")
	public R remove(@RequestParam(value="ids[]",required=true) List<${pk.attrType}> ${pk.attrname}s){
		${classname}Service.batchRemove(${pk.attrname}s);
		return R.ok();
	}
	
}
